(defun getindex(a)
    (cond
        ( (eq a 0) (list '1 '1))
        ( (eq a 1) (list '1 '2))
        ( (eq a 2) (list '1 '3))
        ( (eq a 3) (list '2 '1))
        ( (eq a 4) (list '2 '2))
        ( (eq a 5) (list '2 '3))
        ( (eq a 6) (list '3 '1))
        ( (eq a 7) (list '3 '2))
        ( (eq a 8) (list '3 '3))))
(defun Mand(index1 index2)
    (+ (abs(- (car index1)(car index2))) (abs(- (cadr index1)(cadr index2)) )))

 (defun hc (state goal)
 (cond ((null state) 0)
        ((equal (car state) (car goal)) 
        (hc (cdr state) (cdr goal)))
        (t  (+ (hc (cdr state) (cdr goal)) (/(mand (getindex(car state)) (getindex(car goal)))2)    ))))